<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Order">
	
<!--
O_NO
F_EMAIL
P_NO
O_DATE
O_RECEIVER
O_PHONE
O_ADDRESS
O_MSG
O_STATUS
O_COUNT
O_PRICE
O_DETAILNO

  -->
  
  <!--
O_NO
F_EMAIL
PY_MONEY
PY_CATEGORY
PY_DATE
PY_YN
PY_BANKNAME
PY_BANKACCOUNT
    
    결제와 동시에  Order.insertOrderList   /   Order.insertPayList   /   Cart.updateOrderYN   /   Product.updateProductCnt p_cnt   실행
    -->
    
    
    <insert id="insertOrderList" parameterType="Map">
    	<if test="number == 'ok'">
    		insert into tb_order values(o_no_seq.nextval,#{f_email},#{p_no},sysdate,#{o_receiver},#{o_phone},#{o_address},#{o_msg},#{o_status},#{o_count},#{o_price},o_dno_seq.nextval,null,null,null,null)
    	</if>
    	<if test="number == 'no'">
    		insert into tb_order values(o_no_seq.nextval,#{f_email},#{p_no},sysdate,#{o_receiver},#{o_phone},#{o_address},#{o_msg},#{o_status},#{o_count},#{o_price},o_dno_seq.currval,null,null,null,null)
    	</if>
    </insert>
    
    <insert  id="insertPayList" parameterType="Map">
    		insert into tb_pay values(o_no_seq.currval,#{f_email},#{o_price},#{py_category},sysdate,'y')
    </insert>
    
   
	<select id="selectOrderList" resultType="HashMap" parameterType="Map">
		select o.O_NO,o.F_EMAIL,p.P_NO,P_IMAGE,P_PRICE,P_NAME,PY_CATEGORY,PY_YN,TO_CHAR(O_DATE,'YYYY-MM-DD'),O_RECEIVER,O_PHONE,O_ADDRESS,O_MSG,O_STATUS,O_COUNT,O_PRICE,O_DETAILNO,O_CANCLEREASON from tb_order o inner join tb_product p on(p.p_no = o.p_no) inner join tb_pay py on(o.o_no = py.o_no) where o.f_email = #{f_email}
	</select>
	<select id="selectAllOrderList" resultType="HashMap" parameterType="Map">
		select o.O_NO,o.F_EMAIL,p.P_NO,P_IMAGE,P_PRICE,P_NAME,PY_CATEGORY,PY_YN,TO_CHAR(O_DATE,'YYYY-MM-DD'),O_RECEIVER,O_PHONE,O_ADDRESS,O_MSG,O_STATUS,O_COUNT,O_PRICE,O_DETAILNO,O_CANCLEREASON from tb_order o inner join tb_product p on(p.p_no = o.p_no) inner join tb_pay py on(o.o_no = py.o_no)
	</select>
	
	<select id="selectOrderDetailList" resultType="HashMap" parameterType="Map">
		select o.O_NO,o.F_EMAIL,p.P_NO,P_IMAGE,P_PRICE,P_NAME,PY_CATEGORY,PY_YN,TO_CHAR(O_DATE,'YYYY-MM-DD'),O_RECEIVER,O_PHONE,O_ADDRESS,O_MSG,O_STATUS,O_COUNT,O_PRICE,O_DETAILNO,O_CANCLEREASON from tb_order o inner join tb_product p on(p.p_no = o.p_no) inner join tb_pay py on(o.o_no = py.o_no) where o.f_email = #{f_email} and o_detailno = #{o_detailno}
	</select>
	
	<select id="selectOrderDetailListAdmin" resultType="HashMap" parameterType="Map">
		select o.O_NO,o.F_EMAIL,p.P_NO,P_IMAGE,P_PRICE,P_NAME,PY_CATEGORY,PY_YN,TO_CHAR(O_DATE,'YYYY-MM-DD'),O_RECEIVER,O_PHONE,O_ADDRESS,O_MSG,O_STATUS,O_COUNT,O_PRICE,O_DETAILNO,O_CANCLEREASON from tb_order o inner join tb_product p on(p.p_no = o.p_no) inner join tb_pay py on(o.o_no = py.o_no) where o_detailno = #{o_detailno}
	</select>
	
	<select id="selectTotalPrice" resultType="_int" parameterType="Map">
		select	sum(O_PRICE) from tb_order where f_email = #{f_email} and o_detailno = #{o_detailno}
	</select>
	
	<select id="selectTotalPriceAdmin" resultType="_int" parameterType="Map">
		select	sum(O_PRICE) from tb_order where o_detailno = #{o_detailno}
	</select>
	
	
	
	<update id="updateOrderStatus" parameterType="Map">
		update tb_order set O_STATUS = #{O_STATUS} where O_DETAILNO = #{O_DETAILNO} and F_EMAIL = #{F_EMAIL}
	</update>
	
	<update id="updateOrderCancle" parameterType="Map">
	<if test="O_BANKNAME == '없음'">
		update tb_order set O_STATUS = '주문취소', O_CANCLEREASON = #{O_CANCLEREASON}, O_CANCLEDATE = sysdate where O_DETAILNO = #{O_DETAILNO} and F_EMAIL = #{F_EMAIL}
	</if>
	<if test="O_BANKNAME != '없음'">
		update tb_order set O_STATUS = #{O_STATUS}, O_CANCLEREASON = #{O_CANCLEREASON}, O_BANKNAME = #{O_BANKNAME}, O_BANKACCOUNT = #{O_BANKACCOUNT}, O_CANCLEDATE = sysdate where O_DETAILNO = #{O_DETAILNO} and F_EMAIL = #{F_EMAIL}
	</if>
	</update>
	
	<select id="selectCancleInfo" resultType="HashMap" parameterType="Map">
		select O_CANCLEREASON,O_BANKACCOUNT,O_BANKNAME,TO_CHAR(O_CANCLEDATE,'YYYY-MM-DD') from tb_order where F_EMAIL = #{F_EMAIL} and O_DETAILNO = #{O_DETAILNO} and O_STATUS = #{O_STATUS}
	</select>
	
	<update id="updatePayCancle" parameterType="Map">
		update tb_pay set py_yn = 'n' where o_no = #{o_no} and f_email = #{f_email}
	</update>
	
	<update id="selectOrderChange" parameterType="Map">
		update tb_order set O_STATUS = #{O_STATUS} where O_NO = #{O_NO}
	</update>
	
</mapper>


